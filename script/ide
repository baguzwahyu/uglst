#!/bin/bash

# Define session name

SESSION=uglst

# Go to working directory

cd ~/ugtastic/uglst

#vagrant up --no-provision

# Session Exists?

tmux has-session -t $SESSION
if [ $? -eq 0 ]; then
  echo "Session $SESSION already exists. Attaching."
  sleep 1
  tmux attach -t $SESSION
  exit 0;
fi

# Pre-flight Configuration

postgres -D /usr/local/var/postgres &> log/postgres.log &

tmux -2 new-session -d -s $SESSION

# Create windows
tmux new-window -t $SESSION:1 -n "code"
tmux new-window -t $SESSION:2 -n "web"
tmux new-window -t $SESSION:3 -n "livereload"
#tmux new-window -t $SESSION:4 -n "brakeman"
#tmux new-window -t $SESSION:5 -n "rubocop"

# Define window roles

# Code
tmux select-window -t $SESSION:1
tmux select-pane -t 0
tmux send-keys "clear ; vim" C-m

# Web
tmux select-window -t $SESSION:2
tmux select-pane -t 0
tmux send-keys "clear ; bundle exec rake db:migrate:reset db:setup && bundle exec rails server webrick -p 3000" C-m

# LiveReload
tmux select-window -t $SESSION:3
tmux select-pane -t 0
tmux send-keys "clear ; bundle exec guard -c -g livereload" C-m

# Set the initial working window
tmux select-window -t $SESSION:1

# Attach to named session
tmux -2 attach-session -t $SESSION
